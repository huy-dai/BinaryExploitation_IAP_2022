inc = b'\x2b\xd1\x6b\x65\xea\x86\x3d\x86\x9b\x50\x6d\x71\x6c\x11\x3c\x40\x4c\x61\x7c\x30\x8b\x86\x8b\xa6\x8b\x86\xab\x86\xfb\x87\xaa\xd6\xeb\xa7\xcb\xc6\x7d'
inc = bytearray(inc)
inc.reverse()

out = list(b'}')
print(out)

rol = lambda val, r_bits, max_bits=8: \
    (val << r_bits%max_bits) & (2**max_bits-1) | \
    ((val & (2**max_bits-1)) >> (max_bits-(r_bits%max_bits)))

ror = lambda val, r_bits, max_bits=8: \
    ((val & (2**max_bits-1)) >> r_bits%max_bits) | \
    (val << (max_bits-(r_bits%max_bits)) & (2**max_bits-1))


for index, byte in enumerate(inc):
    if index == len(inc)-1:
        continue
    for i in range(256): # Guesser
        tmp = i + 1
        tmp = tmp % 256
        tmp = rol(tmp,0x5)
        tmp = tmp % 256
        tmp = tmp - 46
        tmp = tmp % 256
        tmp = ~tmp
        tmp = tmp % 256
        tmp = tmp ^ 115
        tmp = tmp % 256
        tmp = -1 * tmp
        tmp = tmp % 256
        tmp = ror(tmp,0x9)
        tmp = tmp % 256
        tmp = tmp + 0x7
        tmp = tmp % 256
        tmp = tmp - 1
        tmp = tmp % 256
        tmp = tmp ^ inc[index+1]
        tmp = tmp % 256
        if tmp == byte:    
            print(tmp)
            out.append(i)
            break
out.reverse()
print(bytes(out))

'''
for byte in inc:
    tmp = last ^ byte
    tmp = tmp % 256
    tmp = (tmp + 1) 
    tmp = tmp % 256
    tmp = tmp - 0x7 
    tmp = rol(tmp,0x1)
    tmp = tmp % 256
    tmp = -1 * tmp
    tmp = tmp % 256
    tmp = (tmp ^ 115)
    tmp = tmp % 256
    tmp = ~tmp
    tmp = tmp % 256
    tmp = tmp + 46
    tmp = tmp % 256
    tmp = ror(tmp,0x5)
    tmp = tmp % 256
    tmp = tmp - 1
    tmp = tmp % 256
    print(tmp)
    out += bytes(chr(tmp),'utf-8')
    last = out[-1]
        
print(out)
'''


    